// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: intend.proto

#include "intend.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace intend {
class IntendRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<IntendRequest>
      _instance;
} _IntendRequest_default_instance_;
class IntendReplyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<IntendReply>
      _instance;
} _IntendReply_default_instance_;
class RealtimeInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RealtimeInfo>
      _instance;
} _RealtimeInfo_default_instance_;
class PolicyInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PolicyInfo>
      _instance;
} _PolicyInfo_default_instance_;
}  // namespace intend
namespace protobuf_intend_2eproto {
static void InitDefaultsIntendRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::intend::_IntendRequest_default_instance_;
    new (ptr) ::intend::IntendRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::intend::IntendRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_IntendRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsIntendRequest}, {}};

static void InitDefaultsIntendReply() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::intend::_IntendReply_default_instance_;
    new (ptr) ::intend::IntendReply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::intend::IntendReply::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_IntendReply =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsIntendReply}, {}};

static void InitDefaultsRealtimeInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::intend::_RealtimeInfo_default_instance_;
    new (ptr) ::intend::RealtimeInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::intend::RealtimeInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RealtimeInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRealtimeInfo}, {}};

static void InitDefaultsPolicyInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::intend::_PolicyInfo_default_instance_;
    new (ptr) ::intend::PolicyInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::intend::PolicyInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PolicyInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPolicyInfo}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_IntendRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_IntendReply.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RealtimeInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PolicyInfo.base);
}

::google::protobuf::Metadata file_level_metadata[4];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::intend::IntendRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::intend::IntendRequest, request_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::intend::IntendReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::intend::IntendReply, reply_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::intend::RealtimeInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::intend::RealtimeInfo, rtinfo_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::intend::PolicyInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::intend::PolicyInfo, pinfo_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::intend::IntendRequest)},
  { 6, -1, sizeof(::intend::IntendReply)},
  { 12, -1, sizeof(::intend::RealtimeInfo)},
  { 18, -1, sizeof(::intend::PolicyInfo)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::intend::_IntendRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::intend::_IntendReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::intend::_RealtimeInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::intend::_PolicyInfo_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "intend.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\014intend.proto\022\006intend\" \n\rIntendRequest\022"
      "\017\n\007request\030\001 \001(\t\"\034\n\013IntendReply\022\r\n\005reply"
      "\030\001 \001(\t\"\036\n\014RealtimeInfo\022\016\n\006rtinfo\030\001 \001(\t\"\033"
      "\n\nPolicyInfo\022\r\n\005pinfo\030\001 \001(\t2\203\001\n\006Intend\022>"
      "\n\nIntendChat\022\025.intend.IntendRequest\032\023.in"
      "tend.IntendReply\"\000(\0010\001\0229\n\007IntChat\022\024.inte"
      "nd.RealtimeInfo\032\022.intend.PolicyInfo\"\000(\0010"
      "\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 289);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "intend.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_intend_2eproto
namespace intend {

// ===================================================================

void IntendRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IntendRequest::kRequestFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IntendRequest::IntendRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_intend_2eproto::scc_info_IntendRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:intend.IntendRequest)
}
IntendRequest::IntendRequest(const IntendRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  request_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.request().size() > 0) {
    request_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.request_);
  }
  // @@protoc_insertion_point(copy_constructor:intend.IntendRequest)
}

void IntendRequest::SharedCtor() {
  request_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

IntendRequest::~IntendRequest() {
  // @@protoc_insertion_point(destructor:intend.IntendRequest)
  SharedDtor();
}

void IntendRequest::SharedDtor() {
  request_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void IntendRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* IntendRequest::descriptor() {
  ::protobuf_intend_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_intend_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const IntendRequest& IntendRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_intend_2eproto::scc_info_IntendRequest.base);
  return *internal_default_instance();
}


void IntendRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:intend.IntendRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  request_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool IntendRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:intend.IntendRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string request = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_request()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->request().data(), static_cast<int>(this->request().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "intend.IntendRequest.request"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:intend.IntendRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:intend.IntendRequest)
  return false;
#undef DO_
}

void IntendRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:intend.IntendRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string request = 1;
  if (this->request().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->request().data(), static_cast<int>(this->request().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "intend.IntendRequest.request");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->request(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:intend.IntendRequest)
}

::google::protobuf::uint8* IntendRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:intend.IntendRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string request = 1;
  if (this->request().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->request().data(), static_cast<int>(this->request().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "intend.IntendRequest.request");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->request(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:intend.IntendRequest)
  return target;
}

size_t IntendRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:intend.IntendRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string request = 1;
  if (this->request().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->request());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IntendRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:intend.IntendRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const IntendRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const IntendRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:intend.IntendRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:intend.IntendRequest)
    MergeFrom(*source);
  }
}

void IntendRequest::MergeFrom(const IntendRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:intend.IntendRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.request().size() > 0) {

    request_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.request_);
  }
}

void IntendRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:intend.IntendRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IntendRequest::CopyFrom(const IntendRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:intend.IntendRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IntendRequest::IsInitialized() const {
  return true;
}

void IntendRequest::Swap(IntendRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IntendRequest::InternalSwap(IntendRequest* other) {
  using std::swap;
  request_.Swap(&other->request_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata IntendRequest::GetMetadata() const {
  protobuf_intend_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_intend_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void IntendReply::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IntendReply::kReplyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IntendReply::IntendReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_intend_2eproto::scc_info_IntendReply.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:intend.IntendReply)
}
IntendReply::IntendReply(const IntendReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  reply_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.reply().size() > 0) {
    reply_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reply_);
  }
  // @@protoc_insertion_point(copy_constructor:intend.IntendReply)
}

void IntendReply::SharedCtor() {
  reply_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

IntendReply::~IntendReply() {
  // @@protoc_insertion_point(destructor:intend.IntendReply)
  SharedDtor();
}

void IntendReply::SharedDtor() {
  reply_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void IntendReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* IntendReply::descriptor() {
  ::protobuf_intend_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_intend_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const IntendReply& IntendReply::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_intend_2eproto::scc_info_IntendReply.base);
  return *internal_default_instance();
}


void IntendReply::Clear() {
// @@protoc_insertion_point(message_clear_start:intend.IntendReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  reply_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool IntendReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:intend.IntendReply)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string reply = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_reply()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->reply().data(), static_cast<int>(this->reply().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "intend.IntendReply.reply"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:intend.IntendReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:intend.IntendReply)
  return false;
#undef DO_
}

void IntendReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:intend.IntendReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string reply = 1;
  if (this->reply().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->reply().data(), static_cast<int>(this->reply().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "intend.IntendReply.reply");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->reply(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:intend.IntendReply)
}

::google::protobuf::uint8* IntendReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:intend.IntendReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string reply = 1;
  if (this->reply().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->reply().data(), static_cast<int>(this->reply().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "intend.IntendReply.reply");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->reply(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:intend.IntendReply)
  return target;
}

size_t IntendReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:intend.IntendReply)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string reply = 1;
  if (this->reply().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->reply());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IntendReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:intend.IntendReply)
  GOOGLE_DCHECK_NE(&from, this);
  const IntendReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const IntendReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:intend.IntendReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:intend.IntendReply)
    MergeFrom(*source);
  }
}

void IntendReply::MergeFrom(const IntendReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:intend.IntendReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.reply().size() > 0) {

    reply_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reply_);
  }
}

void IntendReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:intend.IntendReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IntendReply::CopyFrom(const IntendReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:intend.IntendReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IntendReply::IsInitialized() const {
  return true;
}

void IntendReply::Swap(IntendReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IntendReply::InternalSwap(IntendReply* other) {
  using std::swap;
  reply_.Swap(&other->reply_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata IntendReply::GetMetadata() const {
  protobuf_intend_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_intend_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RealtimeInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RealtimeInfo::kRtinfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RealtimeInfo::RealtimeInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_intend_2eproto::scc_info_RealtimeInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:intend.RealtimeInfo)
}
RealtimeInfo::RealtimeInfo(const RealtimeInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  rtinfo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.rtinfo().size() > 0) {
    rtinfo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rtinfo_);
  }
  // @@protoc_insertion_point(copy_constructor:intend.RealtimeInfo)
}

void RealtimeInfo::SharedCtor() {
  rtinfo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

RealtimeInfo::~RealtimeInfo() {
  // @@protoc_insertion_point(destructor:intend.RealtimeInfo)
  SharedDtor();
}

void RealtimeInfo::SharedDtor() {
  rtinfo_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RealtimeInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RealtimeInfo::descriptor() {
  ::protobuf_intend_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_intend_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RealtimeInfo& RealtimeInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_intend_2eproto::scc_info_RealtimeInfo.base);
  return *internal_default_instance();
}


void RealtimeInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:intend.RealtimeInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  rtinfo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool RealtimeInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:intend.RealtimeInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string rtinfo = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rtinfo()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->rtinfo().data(), static_cast<int>(this->rtinfo().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "intend.RealtimeInfo.rtinfo"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:intend.RealtimeInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:intend.RealtimeInfo)
  return false;
#undef DO_
}

void RealtimeInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:intend.RealtimeInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string rtinfo = 1;
  if (this->rtinfo().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->rtinfo().data(), static_cast<int>(this->rtinfo().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "intend.RealtimeInfo.rtinfo");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->rtinfo(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:intend.RealtimeInfo)
}

::google::protobuf::uint8* RealtimeInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:intend.RealtimeInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string rtinfo = 1;
  if (this->rtinfo().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->rtinfo().data(), static_cast<int>(this->rtinfo().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "intend.RealtimeInfo.rtinfo");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->rtinfo(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:intend.RealtimeInfo)
  return target;
}

size_t RealtimeInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:intend.RealtimeInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string rtinfo = 1;
  if (this->rtinfo().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->rtinfo());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RealtimeInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:intend.RealtimeInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const RealtimeInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RealtimeInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:intend.RealtimeInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:intend.RealtimeInfo)
    MergeFrom(*source);
  }
}

void RealtimeInfo::MergeFrom(const RealtimeInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:intend.RealtimeInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.rtinfo().size() > 0) {

    rtinfo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rtinfo_);
  }
}

void RealtimeInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:intend.RealtimeInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RealtimeInfo::CopyFrom(const RealtimeInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:intend.RealtimeInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RealtimeInfo::IsInitialized() const {
  return true;
}

void RealtimeInfo::Swap(RealtimeInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RealtimeInfo::InternalSwap(RealtimeInfo* other) {
  using std::swap;
  rtinfo_.Swap(&other->rtinfo_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RealtimeInfo::GetMetadata() const {
  protobuf_intend_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_intend_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PolicyInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PolicyInfo::kPinfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PolicyInfo::PolicyInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_intend_2eproto::scc_info_PolicyInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:intend.PolicyInfo)
}
PolicyInfo::PolicyInfo(const PolicyInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pinfo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.pinfo().size() > 0) {
    pinfo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pinfo_);
  }
  // @@protoc_insertion_point(copy_constructor:intend.PolicyInfo)
}

void PolicyInfo::SharedCtor() {
  pinfo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

PolicyInfo::~PolicyInfo() {
  // @@protoc_insertion_point(destructor:intend.PolicyInfo)
  SharedDtor();
}

void PolicyInfo::SharedDtor() {
  pinfo_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PolicyInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PolicyInfo::descriptor() {
  ::protobuf_intend_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_intend_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PolicyInfo& PolicyInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_intend_2eproto::scc_info_PolicyInfo.base);
  return *internal_default_instance();
}


void PolicyInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:intend.PolicyInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pinfo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool PolicyInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:intend.PolicyInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string pinfo = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pinfo()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->pinfo().data(), static_cast<int>(this->pinfo().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "intend.PolicyInfo.pinfo"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:intend.PolicyInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:intend.PolicyInfo)
  return false;
#undef DO_
}

void PolicyInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:intend.PolicyInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string pinfo = 1;
  if (this->pinfo().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pinfo().data(), static_cast<int>(this->pinfo().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "intend.PolicyInfo.pinfo");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->pinfo(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:intend.PolicyInfo)
}

::google::protobuf::uint8* PolicyInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:intend.PolicyInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string pinfo = 1;
  if (this->pinfo().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pinfo().data(), static_cast<int>(this->pinfo().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "intend.PolicyInfo.pinfo");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->pinfo(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:intend.PolicyInfo)
  return target;
}

size_t PolicyInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:intend.PolicyInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string pinfo = 1;
  if (this->pinfo().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pinfo());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PolicyInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:intend.PolicyInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const PolicyInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PolicyInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:intend.PolicyInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:intend.PolicyInfo)
    MergeFrom(*source);
  }
}

void PolicyInfo::MergeFrom(const PolicyInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:intend.PolicyInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.pinfo().size() > 0) {

    pinfo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pinfo_);
  }
}

void PolicyInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:intend.PolicyInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PolicyInfo::CopyFrom(const PolicyInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:intend.PolicyInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PolicyInfo::IsInitialized() const {
  return true;
}

void PolicyInfo::Swap(PolicyInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PolicyInfo::InternalSwap(PolicyInfo* other) {
  using std::swap;
  pinfo_.Swap(&other->pinfo_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PolicyInfo::GetMetadata() const {
  protobuf_intend_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_intend_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace intend
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::intend::IntendRequest* Arena::CreateMaybeMessage< ::intend::IntendRequest >(Arena* arena) {
  return Arena::CreateInternal< ::intend::IntendRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::intend::IntendReply* Arena::CreateMaybeMessage< ::intend::IntendReply >(Arena* arena) {
  return Arena::CreateInternal< ::intend::IntendReply >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::intend::RealtimeInfo* Arena::CreateMaybeMessage< ::intend::RealtimeInfo >(Arena* arena) {
  return Arena::CreateInternal< ::intend::RealtimeInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::intend::PolicyInfo* Arena::CreateMaybeMessage< ::intend::PolicyInfo >(Arena* arena) {
  return Arena::CreateInternal< ::intend::PolicyInfo >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
